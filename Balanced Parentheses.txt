import java.util.Stack;

public class BalancedParentheses {

    public static boolean ArePair(char open, char close) {
        if (open == '(' && close == ')') 
            return true;
        else if (open == '{' && close == '}') 
            return true;
        else if (open == '[' && close == ']')
            return true;
        return false;
    }

    public static boolean AreBalanced(String exp) {
        Stack<Character> S = new Stack<>();
        int length = exp.length();
        for (int i = 0; i < length; i++) {
            char ch = exp.charAt(i);
            if (ch == '(' || ch == '{' || ch == '[')
                S.push(ch);
            else if (ch == ')' || ch == '}' || ch == ']') {
                if (S.isEmpty() || !ArePair(S.peek(), ch))
                    return false;
                else
                    S.pop();
            }
        }
        return S.isEmpty();
    }

    public static void main(String[] args) {
        java.util.Scanner scanner = new java.util.Scanner(System.in);
        System.out.print("Enter an expression: ");
        String expression = scanner.nextLine();
        if (AreBalanced(expression))
            System.out.println("Balanced");
        else
            System.out.println("Not Balanced");
    }
}
